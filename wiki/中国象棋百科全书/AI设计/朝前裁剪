在1949年(确实如此)，Claude Shannon提出了两个象棋程序的算法：
　
1. 着眼于对于所有的着法及其应对着法，循环下去；
2. 只检查“最好”的着法，这个着法由对局面的分析来确定，然后也只选择“最好”的应对着法，循环下去。
　
起初，第二种选择看上去成功的可能更大。毕竟人就是这么做的，从逻辑上说在每个结点上只考察某些着法，总比考虑所有的着法要快。不幸的是，这条理论被事实推翻了，用选择搜索的程序，棋下得并不怎么样。它们最好的也只能达到中等俱乐部棋手的水平，最坏的情况下还会犯低级错误。打败世界冠军(现实一点，水平发挥得稳定一些)是遥不可及的。

在上世纪70年代中期，著名的美国西北大学Slate和Atkin的小组决定放弃复杂的“最佳着法”生成办法，后来证明，他们绕过复杂分析所省下来的时间，足以进行全面的搜索(检查所有的着法)。无论怎么说，这项改革善意地把“朝前裁剪”埋葬了。

下面介绍一下鲍特维尼克的工作。

上世纪70年代到80年代早期，在前世界冠军鲍特维尼克(Mikhail Botvinnik)的领导下，苏联发展了一个特别的朝前裁剪的例子。鲍特维尼克认为，计算机要达到特级大师级水平，唯一的途径就是像特级大师一样，即只考虑少量着法，但是要足够深远足够细致。他的程序试图判定世界级选手才能掌握的局面，还要实现很高水平的作战计划。尽管这个过程中诞生了一些吸引人的著作，揭示了只有鲍特维尼克本人才具备的特级大师级思路，但是这项工作最终没有达到预期的目标。


[国际象棋程序设计(三)：着法的产生](http://www.xqbase.com/computer/basic_movegen.htm)
